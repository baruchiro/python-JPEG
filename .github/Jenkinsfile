pipeline {
  agent any
  stages {
    stage('environment') {
      steps {
        sh 'id'
        sh 'pwd'
        sh 'touch $WORKSPACE/nosetests.xml'
        echo 'Generate requirements file'
        sh 'pipreqs --force $WORKSPACE/'
        sh 'pip3 install --quiet -r $WORKSPACE/requirements.txt --user'
      }
    }
    stage('test') {
      steps {
        sh 'nosetests --with-coverage --cover-package=jpeg --cover-erase --cover-inclusive --cover-min-percentage=80 --with-xunit'
        sh 'pylint -f parseable *.py | tee pylint.out'
        sh 'coverage xml'
      }
    }
    stage('End Tasks'){
      parallel{
        stage('publish') {
          steps {
            junit '**/nosetests.xml'
            cobertura(coberturaReportFile: '**/coverage.xml')
          }
        }
          stage('format'){
            when {
              branch 'master'
            }
            steps{
              
                sh 'yapf -i --style .github/.style.yapf `ls *.py`'
                sh 'git add -u'
                sh 'git commit -m "format"'
                sh 'git push --set-upstream origin master'
              
            }
          }
        stage('Generate sample'){
          when {
            branch 'master'
          }
          steps{
            try{
              sh 'convert Flowchart/flowchart.pdf Flowchart/flowchart.png'
            }catch(ex){
              echo ex
            }
          }
        }
      }
    }
  }
  environment {
    PATH = "$PATH:/var/lib/jenkins/.local/bin"
  }
}